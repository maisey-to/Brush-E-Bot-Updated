#include "DS3231.h"
#include "MAX7219.h"
#include <SPI.h>
#include <Wire.h> 

const uint8_t NUMBERS[][10] = {
  {0b00000000, 0b00001110, 0b00001010, 0b00001010, 0b00001010, 0b00001010, 0b00001110, 0b00000000},
  {0b00000000, 0b00000100, 0b00000100, 0b00000100, 0b00000100, 0b00000100, 0b00000100, 0b00000000},
  {0b00000000, 0b00001110, 0b00000010, 0b00001110, 0b00001000, 0b00001000, 0b00001110, 0b00000000},
  {0b00000000, 0b00001110, 0b00000010, 0b00001110, 0b00000010, 0b00000010, 0b00001110, 0b00000000},
  {0b00000000, 0b00001010, 0b00001010, 0b00001110, 0b00000010, 0b00000010, 0b00000010, 0b00000000},
  {0b00000000, 0b00001110, 0b00001000, 0b00001110, 0b00000010, 0b00000010, 0b00001110, 0b00000000},
  {0b00000000, 0b00001110, 0b00001000, 0b00001110, 0b00001010, 0b00001010, 0b00001110, 0b00000000},
  {0b00000000, 0b00001110, 0b00001010, 0b00000010, 0b00000010, 0b00000010, 0b00000010, 0b00000000},
  {0b00000000, 0b00001110, 0b00001010, 0b00001110, 0b00001010, 0b00001010, 0b00001110, 0b00000000},
  {0b00000000, 0b00001110, 0b00001010, 0b00001110, 0b00000010, 0b00000010, 0b00001110, 0b00000000},
  {0b00000000, 0b00101110, 0b00101010, 0b00101010, 0b00101010, 0b00101010, 0b00101110, 0b00000000},
  {0b00000000, 0b00100100, 0b00100100, 0b00100100, 0b00100100, 0b00100100, 0b00100100, 0b00000000},
  {0b00000000, 0b00101110, 0b00100010, 0b00101110, 0b00101000, 0b00101000, 0b00101110, 0b00000000},
  {0b00000000, 0b00101110, 0b00100010, 0b00101110, 0b00100010, 0b00100010, 0b00101110, 0b00000000},
  {0b00000000, 0b00101010, 0b00101010, 0b00101110, 0b00100010, 0b00100010, 0b00100010, 0b00000000},
  {0b00000000, 0b00101110, 0b00101000, 0b00101110, 0b00100010, 0b00100010, 0b00101110, 0b00000000},
  {0b00000000, 0b00101110, 0b00101000, 0b00101110, 0b00101010, 0b00101010, 0b00101110, 0b00000000},
  {0b00000000, 0b00101110, 0b00101010, 0b00100010, 0b00100010, 0b00100010, 0b00100010, 0b00000000},
  {0b00000000, 0b00101110, 0b00101010, 0b00101110, 0b00101010, 0b00101010, 0b00101110, 0b00000000},
  {0b00000000, 0b00101110, 0b00101010, 0b00101110, 0b00100010, 0b00100010, 0b00101110, 0b00000000},
  {0b00000000, 0b11101110, 0b00101010, 0b11101010, 0b10001010, 0b10001010, 0b11101110, 0b00000000},
  {0b00000000, 0b11100100, 0b00100100, 0b11100100, 0b10000100, 0b10000100, 0b11100100, 0b00000000},
  {0b00000000, 0b11101110, 0b00100010, 0b11101110, 0b10001000, 0b10001000, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b00100010, 0b11101110, 0b10000010, 0b10000010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101010, 0b00101010, 0b11101110, 0b10000010, 0b10000010, 0b11100010, 0b00000000},
  {0b00000000, 0b11101110, 0b00101000, 0b11101110, 0b10000010, 0b10000010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b00101000, 0b11101110, 0b10001010, 0b10001010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b00101010, 0b11100010, 0b10000010, 0b10000010, 0b11100010, 0b00000000},
  {0b00000000, 0b11101110, 0b00101010, 0b11101110, 0b10001010, 0b10001010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b00101010, 0b11101110, 0b10000010, 0b10000010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b00101010, 0b11101010, 0b00101010, 0b00101010, 0b11101110, 0b00000000},
  {0b00000000, 0b11100100, 0b00100100, 0b11100100, 0b00100100, 0b00100100, 0b11100100, 0b00000000},
  {0b00000000, 0b11101110, 0b00100010, 0b11101110, 0b00101000, 0b00101000, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b00100010, 0b11101110, 0b00100010, 0b00100010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101010, 0b00101010, 0b11101110, 0b00100010, 0b00100010, 0b11100010, 0b00000000},
  {0b00000000, 0b11101110, 0b00101000, 0b11101110, 0b00100010, 0b00100010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b00101000, 0b11101110, 0b00101010, 0b00101010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b00101010, 0b11100010, 0b00100010, 0b00100010, 0b11100010, 0b00000000},
  {0b00000000, 0b11101110, 0b00101010, 0b11101110, 0b00101010, 0b00101010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b00101010, 0b11101110, 0b00100010, 0b00100010, 0b11101110, 0b00000000},
  {0b00000000, 0b10101110, 0b10101010, 0b11101010, 0b00101010, 0b00101010, 0b00101110, 0b00000000},
  {0b00000000, 0b10100100, 0b10100100, 0b11100100, 0b00100100, 0b00100100, 0b00100100, 0b00000000},
  {0b00000000, 0b10101110, 0b10100010, 0b11101110, 0b00101000, 0b00101000, 0b00101110, 0b00000000},
  {0b00000000, 0b10101110, 0b10100010, 0b11101110, 0b00100010, 0b00100010, 0b00101110, 0b00000000},
  {0b00000000, 0b10101010, 0b10101010, 0b11101110, 0b00100010, 0b00100010, 0b00100010, 0b00000000},
  {0b00000000, 0b10101110, 0b10101000, 0b11101110, 0b00100010, 0b00100010, 0b00101110, 0b00000000},
  {0b00000000, 0b10101110, 0b10101000, 0b11101110, 0b00101010, 0b00101010, 0b00101110, 0b00000000},
  {0b00000000, 0b10101110, 0b10101010, 0b11100010, 0b00100010, 0b00100010, 0b00100010, 0b00000000},
  {0b00000000, 0b10101110, 0b10101010, 0b11101110, 0b00101010, 0b00101010, 0b00101110, 0b00000000},
  {0b00000000, 0b10101110, 0b10101010, 0b11101110, 0b00100010, 0b00100010, 0b00100010, 0b00000000},
  {0b00000000, 0b11101110, 0b10001010, 0b11101010, 0b00101010, 0b00101010, 0b11101110, 0b00000000},
  {0b00000000, 0b11100100, 0b10000100, 0b11100100, 0b00100100, 0b00100100, 0b11100100, 0b00000000},
  {0b00000000, 0b11101110, 0b10000010, 0b11101110, 0b00101000, 0b00101000, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b10000010, 0b11101110, 0b00100010, 0b00100010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101010, 0b10001010, 0b11101110, 0b00100010, 0b00100010, 0b11100010, 0b00000000},
  {0b00000000, 0b11101110, 0b10001000, 0b11101110, 0b00100010, 0b00100010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b10001000, 0b11101110, 0b00101010, 0b00101010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b10001010, 0b11100010, 0b00100010, 0b00100010, 0b11100010, 0b00000000},
  {0b00000000, 0b11101110, 0b10001010, 0b11101110, 0b00101010, 0b00101010, 0b11101110, 0b00000000},
  {0b00000000, 0b11101110, 0b10001010, 0b11101110, 0b00100010, 0b00100010, 0b11100010, 0b00000000}
};  // Numbers from 0 to 59

const int NUMBERS_LEN = sizeof(NUMBERS)/8;

void setup()   {
  pinMode(CS, OUTPUT);

  // Start I2C
  Wire.begin();

  // Start SPI
  SPI.begin();
  
  spiWriteRegister(DISPLAY_TEST, 0x01);  // Run test - All LED segments lit.
  delay(1000);
  spiWriteRegister(DISPLAY_TEST, 0x00);  // Finish test mode.

  spiWriteRegister(DECODE_MODE, 0x00);  // Disable BCD mode. 
  spiWriteRegister(INTENSITY, 0x01);  // Use lowest intensity.   
  spiWriteRegister(SCAN_LIMIT, 0x0F);  // Scan all digits.
  spiWriteRegister(SHUTDOWN, 0x01);  // Turn on chip.
}

void loop()  {
  // https://xantorohara.github.io/led-matrix-editor

  uint8_t secs = readTimeRegister(DS3231_SECONDS)%60;

  for (int i=1;i<9;i++)
    spiWriteRegister(i, NUMBERS[secs][i-1]);

  delay(100);
}


